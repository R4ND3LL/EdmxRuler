<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                      xmlns:system="clr-namespace:System;assembly=System.Runtime"
                      xmlns:local="http://propertytools.org/wpf">
     
    <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure IsFilled="True" StartPoint="0 0" IsClosed="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6" />
                            <LineSegment Point="6 0" />
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5" SnapsToDevicePixels="True">
                        <Path x:Name="ExpandPath" Fill="{DynamicResource BlackBrush}" Stroke="{DynamicResource BlackBrush}"
                  Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource Accent2}" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource Accent2}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="135" To="180" Duration="0:0:0.25"
                                     Storyboard.TargetName="ExpandPath"
                                     Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="180" To="135" Duration="0:0:0.25"
                                     Storyboard.TargetName="ExpandPath"
                                     Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource GrayBrush1}" />
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="MouseOverBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="{DynamicResource Accent3Color}" Offset="0" />
            <GradientStop Color="{DynamicResource Accent4Color}" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="MouseOverBorder" Color="{DynamicResource Accent4Color}" />

    <LinearGradientBrush x:Key="SelectedBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="{DynamicResource WhiteColor}" Offset="0" />
            <GradientStop Color="{DynamicResource WhiteColor}" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedBorder" Color="#3A69A4" />

    <SolidColorBrush x:Key="SelectedInnerBorder" Color="#1C252E" />

    <Style TargetType="{x:Type local:TreeListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type local:TreeListBoxItem}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Padding" Value="{Binding LevelPadding, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:TreeListBoxItem}">
                                <Border x:Name="Bd" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                    <Border x:Name="Bd2" BorderThickness="1" SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                          SnapsToDevicePixels="True" />
                                            <ContentPresenter Grid.Column="1">
                                                <ContentPresenter.InputBindings>
                                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ToggleExpandCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </ContentPresenter.InputBindings>
                                            </ContentPresenter>
                                        </Grid>
                                    </Border>
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource MouseOverBackground}" />
                                                    <Setter Property="BorderBrush" Value="{StaticResource MouseOverBorder}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="IsDropTarget" Value="True">
                                        <Setter TargetName="Bd2" Property="Background" Value="{StaticResource MouseOverBackground}" />
                                        <Setter TargetName="Bd2" Property="BorderBrush" Value="{StaticResource MouseOverBorder}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBackground}" />
                                        <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
                                        <Setter TargetName="Bd2" Property="BorderBrush" Value="{StaticResource SelectedInnerBorder}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>